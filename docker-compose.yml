version: "3"

services:
  minio:
    image: minio/minio:latest
    container_name: ${PROJECT_NAME}_minio
    volumes:
      - ./s3/data1-1:/data1
      - ./s3/data1-2:/data2
    environment:
      - "MINIO_ROOT_USER=${MINIO_ROOT_USER}"
      - "MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}"
    expose:
      - "9000"
      - "9001"
    command: server --console-address ":9001" http://minio/data{1...2}
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live' ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - internal

  nginx-minio:
    image: ${PROJECT_NAME}_nginx-minio
    build:
      context: ./nginx-minio
    container_name: ${PROJECT_NAME}_nginx-minio.local
    hostname: nginx-minio.local
    depends_on:
      - minio
    volumes:
      - ./nginx-minio/conf.d:/etc/nginx/conf.d
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - internal

  api:
    image: ${PROJECT_NAME}_api
    build:
      context: ./api
    container_name: ${PROJECT_NAME}_api
    working_dir: /var/www/api/
    volumes:
      - ../api:/var/www/api/
    depends_on:
      - database
    command: "su node -c 'npm run docker:start'"
    networks:
      - internal

  admin:
    image: ${PROJECT_NAME}_admin
    build:
      context: ./admin
    container_name: ${PROJECT_NAME}_admin
    working_dir: /var/www/admin
    volumes:
      - ../admin:/var/www/admin

    ports:
      - "24678:24678"
    command: "su node -c 'npm ci && npm run dev'"
    networks:
      - internal

  nginx:
    image: ${PROJECT_NAME}_nginx
    build:
      context: ./nginx
    container_name: ${PROJECT_NAME}_nginx
    depends_on:
      - api
      - admin
    volumes:
      - ../api:/var/www/api
      - ../admin:/var/www/admin
      - ./nginx/conf.d:/etc/nginx/conf.d
    ports:
      - ${NGINX_PORT}:80
    networks:
      - internal

  database:
    image: postgres:11-alpine
    container_name: ${PROJECT_NAME}_postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./database:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT_EXPOSED}:${POSTGRES_PORT}"
    networks:
      - internal

networks:
  internal:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${NETWORK_SUBNET}
